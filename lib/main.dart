// main.dart

import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:testing/screen/main/home_screen.dart';
import 'package:testing/screen/main/onboarding_screen.dart';
// NOTE: Make sure you have run `flutterfire configure` to generate this file.
import 'firebase_options.dart';

void main() async {
  // Ensure Flutter is initialized before calling Firebase functions.
  WidgetsFlutterBinding.ensureInitialized();
  // Initialize the Firebase app with the options generated by the CLI.
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    // We use a StreamBuilder to listen for changes in the user's authentication state.
    // This automatically handles navigation between the authentication screens and the home screen.
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Coffee App',
      theme: ThemeData(
        primarySwatch: Colors.amber,
        visualDensity: VisualDensity.adaptivePlatformDensity,
        fontFamily:
            'Inter', // Assuming Inter font is available or you can use GoogleFonts
        inputDecorationTheme: InputDecorationTheme(
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(30.0),
            borderSide: BorderSide.none,
          ),
          filled: true,
          fillColor: Colors.grey.shade200,
          contentPadding: const EdgeInsets.symmetric(
            horizontal: 20.0,
            vertical: 15.0,
          ),
        ),
      ),
      home: StreamBuilder<User?>(
        stream: FirebaseAuth.instance.authStateChanges(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.active) {
            User? user = snapshot.data;
            if (user == null) {
              // User is not logged in, show the Onboarding screen
              return const OnboardingScreen();
            }
            // User is logged in, show the Home screen
            return const HomeScreen();
          }
          // Show a loading indicator while checking the authentication state
          return const Scaffold(
            body: Center(child: CircularProgressIndicator()),
          );
        },
      ),
    );
  }
}
